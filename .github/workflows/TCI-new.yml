name: TCI SIT
on:
  push:
    branches:
      - POC
   # inputs:
   #   branch_name:
   #     description: Branch Name
   #     required: true
   #   build_number:
   #     description: Build Number
   #     required: false
   #   workflow_type:
   #     description: Workflow Type
   #     required: true
   #     default: Build-Deploy
   #   instance_count:
   #     description: Instance Count
   #     required: true
   #     default: 0
   #   instance_name:
   #     description: 'Instance-Name'
   #     required: false
   #   Sharedmodule_instance_name:
   #     description: 'Shared-module-Instance-Name'
   #     required: false
env:      
  HTTP_PROXY: ${{ secrets.CHC_HTTP_PROXY }}
  HTTPS_PROXY: ${{ secrets.CHC_HTTPS_PROXY }}
  GITHUB_PAT: ${{ secrets.CHC_GITHUB_PAT }}
  JFROG_USERNAME:  ${{ secrets.JFROG_USERNAME }}
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  WORKSPACE: ${{ github.workspace }}
  GIT_USERNAME:  ${{ secrets.CHC_GIT_CONFIG_NAME }}
  GIT_EMAIL: ${{ secrets.CHC_GIT_CONFIG_EMAIL }}
#  BRANCH_NAME: ${{github.event.inputs.branch_name}}
  REPONAME: ${{ github.event.repository.name }}

jobs:
  my-job:
    runs-on: ['atmos-aws-arc-runner-set']
    container:
      image: sanofi-docker-chc-tibco-local.jfrog.io/build-images/sanofi-chc-build-base:v1.0.0
      credentials:
        username: ${{ env.JFROG_USERNAME }}
        password: ${{ env.JFROG_TOKEN }}
    steps:
      - name: add repo to safe directory
        run: |
          git config --global --add safe.directory /__w/${REPONAME}/${REPONAME}
          
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          submodules: 'true'
          ref: ${{ env.BRANCH_NAME }}
          token: ${{ env.GITHUB_PAT }}

      - name: CHeckout Devops scripts
        uses: actions/checkout@v2.3.4
        with:
          repository: Sanofi-GitHub/chc-devops-scripts
          ref: POC
          token: ${{ env.GITHUB_PAT }}
      
      - name: Read CSV
        run: |
          python3.9 calling-workflows/sample.py
        env:
          csv_path: calling-workflows/Inputs.csv 

      - name: Assign values to variables
        run: |
          csv_values=$(cat calling-workflows/Inputs.csv | sed -n 2p)
          Branch_Name = $(echo "$csv_values" | cut -d',' -f1)
          echo "::set-ouput name=BRANCHNAME::$Branch_Name"

      - name: use workflow variables
        run: |
          echo "Branch Name: ${{ steps.assign_values.outputs.BRANCHNAME }}"
